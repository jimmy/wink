require 'wink'
require 'dm-core'
require 'dm-validations'
require 'dm-timestamps'

module Model
  extend self

  SOURCE_DIR = File.dirname(__FILE__) + '/models'

  # jimmy: This list should be autogenerated from the files in SOURCE_DIR.
  # That is slightly tricky because Entry must be loaded before Article and
  # Bookmark.  The list of models is fairly static, so this will do for now.
  # TODO: check if this list needs to or should include EntryTag
  NAMES =  %w[Entry Article Bookmark Tag Comment]

  # Model names are assumed to match their file names.
  def load_all
    NAMES.each do |model_name|
      load SOURCE_DIR + '/' + model_name.downcase + '.rb'
    end
  end

  def unload_all
    NAMES.each { |model_name| unload_one(model_name) }
  end

  def unload_one(model_name)
    model_klass = Object.const_get(model_name)
    model_klass.destroy! if model_klass.respond_to?(:destroy!)
    Object.send :remove_const, model_name
  rescue => boom
    STDERR.puts "error unloading constant: #{model_name}"
  end

  def reload_all
    unload_all
    load_all
  end

end

Model.load_all
